# .github/workflows/deploy.yml
name: Deploy Discord Bot via Cloudflare Tunnel

on:
  push:
    branches: [main]
  workflow_dispatch: # permite executar manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Cloudflared SSH Client
        uses: tichopad/setup-cloudflared-ssh-client@v1
        
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Debug Secrets (Safe)
        run: |
          echo "SSH_HOST is set: ${{ secrets.SSH_HOST != '' }}"
          echo "SSH_USER is set: ${{ secrets.SSH_USER != '' }}"
          echo "SSH_PRIVATE_KEY is set: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
          
      - name: Configure SSH Client
        run: |
          cat > ~/.ssh/config << EOF
          Host homelab
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USER }}
            ProxyCommand cloudflared access ssh --hostname %h
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          EOF
          
      - name: Debug SSH Config
        run: |
          echo "=== SSH Config ==="
          cat ~/.ssh/config
          echo "=================="
          
      - name: Deploy Discord Bot to Homelab
        run: |
          ssh homelab << 'EOF'
            # Navegar para o diretório do projeto
            cd ~/Github/discordbot-homelab  # Ajuste o caminho conforme necessário
            
            # Fazer pull das últimas mudanças
            echo "🔄 Pulling latest changes..."
            git pull origin main
            
            # Parar o container existente
            echo "🛑 Stopping existing container..."
            docker-compose down discordbot-homelab || echo "Container não estava rodando"
            
            # Rebuild e restart do container
            echo "🔨 Building and starting container..."
            docker-compose up -d --build discordbot-homelab
            
            # Aguardar um pouco para o container inicializar
            echo "⏳ Waiting for container to start..."
            sleep 15
            
            # Verificar se o container está rodando
            echo "🔍 Checking container status..."
            if docker ps | grep -q "discordbot-homelab"; then
              echo "✅ Discord Bot deploy successful!"
              echo "📊 Container status:"
              docker ps --filter "name=discordbot-homelab" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
              
              # Mostrar logs recentes para verificar se está funcionando
              echo "📋 Recent logs:"
              docker logs discordbot-homelab --tail 10
            else
              echo "❌ Container failed to start"
              echo "🔍 Checking logs for errors:"
              docker logs discordbot-homelab --tail 20
              exit 1
            fi
          EOF